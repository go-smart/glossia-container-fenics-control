GO-SMART-IRE
============

go-smart-ire is a simulation of irreversible electroporation, a minimally invasive cancer treatment (MICT), as part of the Go-Smart EU FP7 project. This Python software uses the FEniCS libraries for finite element solution. There is also an Elmer-based solver against which this compares favourably.

DEPENDENCIES
------------

* FEniCS 1.5
* Numpy 1.8.2

MESHING
-------

This script uses DOLFIN XML input (standard for FEniCS codes). To produce this from a series of input surface meshes, such as are normally available in Go-Smart, it is recommended to use the mesher_cgal tool. To produce a useful input volumetric mesh, you would have one needle surface mesh for each needle, each with a separate index, a tumour surface mesh, an external bounding region (e.g. cuboid) for far-field boundary conditions and an organ exterior.

A suggested command line is as follows:

mesher_cgal --centre_radius 0.1  --output_prefix ire-cuboid-4  \                                                                                                                        ‚èé
    --zonefield 0.01 --farfield 0.01 --granularity 0.001 --nearfield 0.01 \
    --output_gmsh --centre -0.0108 0.0174 -0.004 --zones tumour1.vtp:7 \
    needle1.vtp:1:0.0003 needle2.vtp:2:0.0003 needle3.vtp:3:0.0003 \
    needle4.vtp:4:0.0003 needle5.vtp:5:0.0003 needle6.vtp:6:0.0003 \
    exterior.vtp:11 --vessels vessel1.vtp:8 vessel2.vtp:9 vessel3.vtp:10 \
    --organ cuboid.vtp:0 --tissueid 0 --mark_zone_boundaries --output_vtk \
    --bounding_radius 1

The resulting GMSH mesh output should be should be processed with dolfin-convert to produce a DOLFIN XML mesh and region files (suffixed '_facet_region.xml' and '_physical_region.xml'). These should be stored in an 'input/' subdirectory of the code root. A blank 'output/' subdirectory should also be created. The input_prefix variable in problem.py should be set to match the input mesh filename root.

EXECUTION
---------

The tool should be executed by running 'python run_ire.py' in the project root. Most settings are configured in variables.py.
